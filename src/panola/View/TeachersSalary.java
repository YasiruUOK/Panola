/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panola.View;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.Popup;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.JXLabel;
import panola.Controller.TeacherController;
import panola.Controller.TeacherPaymentsController;
import static panola.Controller.TeacherPaymentsController.getDueToPay;
import panola.db.DBConnection;
import panola.model.Teacher;
import panola.model.TeacherPayAtNow;
import panola.model.TeacherPayments;
import panola.other.Methods;

/**
 *
 * @author Yasiru
 */
public class TeachersSalary extends javax.swing.JFrame {
    
    /**
     * Creates new form UserLogin
     */
    public TeachersSalary() {
        initComponents();
        //ImageIcon imageIcon = new ImageIcon("./src/panola/images/insegnare-assistente-italiano-estero-austria-vienna (Custom).png");
        //jXImagePanel1.setImage(imageIcon.getImage());
        setDateAndTime();
        try {
            Methods.fillTeacherNameCombo(teacherNameCombo);
            fillTable(teacherNameCombo.getSelectedItem().toString());
            fillTeacherPaymentDetails();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentPopupMenu = new javax.swing.JPopupMenu();
        newStudent = new javax.swing.JMenuItem();
        viewStudent = new javax.swing.JMenuItem();
        subjectPopupMenu = new javax.swing.JPopupMenu();
        newSubject = new javax.swing.JMenuItem();
        viewSubject = new javax.swing.JMenuItem();
        jXImagePanel1 = new org.jdesktop.swingx.JXImagePanel();
        jLabel2 = new javax.swing.JLabel();
        TimeLable = new javax.swing.JLabel();
        dateLable = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        fromDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel5 = new javax.swing.JLabel();
        toDate = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        paidDetailstable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        PrintAllDetails = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TotalPaidAmountText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        payAtNowTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        expectedAmountText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dueToPayText = new javax.swing.JTextField();
        amountOfPayAtNowText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        balanceText = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        teacherNameCombo = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        teacherPaymentDetails = new javax.swing.JTable();
        printPaidDetailsButton = new javax.swing.JButton();

        studentPopupMenu.setAlignmentX(1000.0F);
        studentPopupMenu.setAlignmentY(1000.0F);
        studentPopupMenu.setEnabled(false);

        newStudent.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        newStudent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panola/images/1417001539_add_48 (Custom).png"))); // NOI18N
        newStudent.setText("New");
        newStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newStudentMouseClicked(evt);
            }
        });
        newStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newStudentActionPerformed(evt);
            }
        });
        studentPopupMenu.add(newStudent);

        viewStudent.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        viewStudent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panola/images/1417001562_search_48 (Custom).png"))); // NOI18N
        viewStudent.setText("View Details");
        viewStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStudentActionPerformed(evt);
            }
        });
        studentPopupMenu.add(viewStudent);

        subjectPopupMenu.setAlignmentX(-1000.0F);
        subjectPopupMenu.setAlignmentY(-1000.0F);

        newSubject.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        newSubject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panola/images/1417001539_add_48 (Custom).png"))); // NOI18N
        newSubject.setText("New");
        subjectPopupMenu.add(newSubject);

        viewSubject.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewSubject.setText("View");
        subjectPopupMenu.add(viewSubject);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Panola Institute Of Education");

        jXImagePanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        jLabel2.setText("Salary");

        TimeLable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TimeLable.setText("jLabel4");

        dateLable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dateLable.setText("jLabel4");

        jSeparator1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panola/images/home (Custom).jpg"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Time Period                   From:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("To");

        paidDetailstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Teacher Name", "Paid Date", "Paid Amount"
            }
        ));
        jScrollPane1.setViewportView(paidDetailstable);

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        PrintAllDetails.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PrintAllDetails.setText("Print");
        PrintAllDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintAllDetailsActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Total Amount");

        TotalPaidAmountText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalPaidAmountText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TotalPaidAmountText.setText("0.0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(searchButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(495, 495, 495)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(TotalPaidAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PrintAllDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PrintAllDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TotalPaidAmountText))
                .addGap(43, 43, 43))
        );

        jTabbedPane1.addTab("  Paid Details   ", jPanel2);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Name");

        payAtNowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Batch", "Category", "No of Student Class Fee Paid", "Total number of students", "Class Fee", "Payment Percentage", "Expected Amount", "Total Recived Amount"
            }
        ));
        jScrollPane2.setViewportView(payAtNowTable);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Expected Amount");

        expectedAmountText.setEditable(false);
        expectedAmountText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expectedAmountText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Amount of Due to Pay");

        dueToPayText.setEditable(false);
        dueToPayText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dueToPayText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        amountOfPayAtNowText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        amountOfPayAtNowText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        amountOfPayAtNowText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountOfPayAtNowTextActionPerformed(evt);
            }
        });
        amountOfPayAtNowText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountOfPayAtNowTextKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Amount of Pay at Now");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Balance");

        balanceText.setEditable(false);
        balanceText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        balanceText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        okButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        okButton.setText("Print");
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        teacherNameCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        teacherNameCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                teacherNameComboItemStateChanged(evt);
            }
        });
        teacherNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherNameComboActionPerformed(evt);
            }
        });

        teacherPaymentDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Paid Date", "Paid Amount"
            }
        ));
        jScrollPane3.setViewportView(teacherPaymentDetails);

        printPaidDetailsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        printPaidDetailsButton.setText("Print Paid Details");
        printPaidDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printPaidDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(teacherNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(printPaidDetailsButton)
                        .addGap(226, 226, 226)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(expectedAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dueToPayText, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amountOfPayAtNowText, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(265, 265, 265))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(232, 232, 232))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teacherNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(expectedAmountText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dueToPayText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amountOfPayAtNowText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(balanceText))
                        .addGap(18, 18, 18)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printPaidDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("   Pay @ Now     ", jPanel3);

        javax.swing.GroupLayout jXImagePanel1Layout = new javax.swing.GroupLayout(jXImagePanel1);
        jXImagePanel1.setLayout(jXImagePanel1Layout);
        jXImagePanel1Layout.setHorizontalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 823, Short.MAX_VALUE)
                        .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateLable, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TimeLable, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1216, 1216, 1216))))
        );
        jXImagePanel1Layout.setVerticalGroup(
            jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXImagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXImagePanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jXImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel1Layout.createSequentialGroup()
                        .addComponent(TimeLable, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLable, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXImagePanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(26, 26, 26))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXImagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newStudentMouseClicked

    }//GEN-LAST:event_newStudentMouseClicked

    private void newStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newStudentActionPerformed
        AddAStudent addAStudent = new AddAStudent();
        addAStudent.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_newStudentActionPerformed

    private void viewStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStudentActionPerformed
        ViewStudentDetails viewStudentDetails = new ViewStudentDetails();
        viewStudentDetails.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_viewStudentActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MainWindow mWindow = new MainWindow();
        mWindow.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void teacherNameComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_teacherNameComboItemStateChanged
        try {
            fillTable(teacherNameCombo.getSelectedItem().toString());
            fillTeacherPaymentDetails();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            //JOptionPane.showMessageDialog(this, "No teacher Found");
        }
    }//GEN-LAST:event_teacherNameComboItemStateChanged

    private void amountOfPayAtNowTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountOfPayAtNowTextActionPerformed

        double AmountOfDueToPay = Double.parseDouble(dueToPayText.getText());
        double PayAtNow = Double.parseDouble(amountOfPayAtNowText.getText());
        if (PayAtNow <= AmountOfDueToPay) {
            double balance=AmountOfDueToPay - PayAtNow;
            balanceText.setText(String.valueOf(balance));
            okButton.setEnabled(true);
            
        }


    }//GEN-LAST:event_amountOfPayAtNowTextActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        double PayAtNow = Double.parseDouble(amountOfPayAtNowText.getText());
        try {
                String NIC = TeacherController.getID(teacherNameCombo.getSelectedItem().toString());
                int res = TeacherPaymentsController.addPayment(NIC, PayAtNow);
                if (res > 0) {
                    JOptionPane.showMessageDialog(this, "Payment Added");
                    dueToPayText.setText(String.valueOf(Double.parseDouble(dueToPayText.getText())-PayAtNow));
                    amountOfPayAtNowText.setText("0.0");
                    balanceText.setText("0.0");
                    fillTeacherPaymentDetails();
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
            }
        try {
            JasperReport compileReport=JasperCompileManager.compileReport("./src/reports/TeacherSalaryDetails.jrxml");
            Map<String, Object> map=new HashMap<>();
            map.put("TeacherName", teacherNameCombo.getSelectedItem().toString());
            DefaultTableModel dtm=(DefaultTableModel) payAtNowTable.getModel();
            double TotalOfRecivedAmount=0;
            for (int i = 0; i < dtm.getRowCount(); i++) {
                TotalOfRecivedAmount+=Double.valueOf((double) payAtNowTable.getValueAt(i, 7));
            }
            map.put("TotalOfRecivedAmount", TotalOfRecivedAmount);
            DefaultTableModel dtm1=(DefaultTableModel) teacherPaymentDetails.getModel();
            double paidAmount=0;
            for (int i = 0; i < dtm1.getRowCount(); i++) {
                paidAmount+=Double.valueOf((double) teacherPaymentDetails.getValueAt(i, 1));
            }
            map.put("PaidAmount", paidAmount);
            map.put("PayAtNow", PayAtNow);
            double dueToPay=TotalOfRecivedAmount-(paidAmount+PayAtNow);
            map.put("DueToPay", dueToPay);
            JasperPrint fillReport=JasperFillManager.fillReport(compileReport, map, DBConnection.getDBConnection().getConnection());
            JasperViewer.viewReport(fillReport,false);
        } catch (JRException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        if (fromDate != null & toDate != null) {
                Date dateFrom;
                Date dateTo;

                String resultDateFrom;
                String resultDateTo;

                SimpleDateFormat formatter;
                formatter = new SimpleDateFormat("yyyy-MM-dd");
                dateFrom = fromDate.getDate();
                dateTo = toDate.getDate();

                resultDateFrom = formatter.format(dateFrom);
                resultDateTo = formatter.format(dateTo);

                if (dateFrom.before(dateTo)) {
                    String NIC;
                    try {
                       // NIC = TeacherController.getID(teacherNameCombo.getSelectedItem().toString());
                        ArrayList<Teacher> teacherPayAtNowDetails=TeacherPaymentsController.getDetails(resultDateFrom,resultDateTo);
                        DefaultTableModel dtm=(DefaultTableModel) paidDetailstable.getModel();
                        dtm.setRowCount(0);
                        double Total=0;
                        for (Teacher teacher : teacherPayAtNowDetails) {
                            Object[] rawData={teacher.getName(),teacher.getAddress(),teacher.getPaymentPercentage()};
                            dtm.addRow(rawData);
                        }
                        for (int i = 0; i < dtm.getRowCount(); i++) {
                        Total = Total + Double.parseDouble(String.valueOf(dtm.getValueAt(i, 2)));
                    }
                    TotalPaidAmountText.setText(String.valueOf(Total));
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(this, "Please input dates correctly");
                }
        }else{
            JOptionPane.showMessageDialog(this, "Please input dates");
        }
                
    }//GEN-LAST:event_searchButtonActionPerformed

    private void PrintAllDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintAllDetailsActionPerformed
        try {
            JasperReport compileReport=JasperCompileManager.compileReport("./src/reports/PaymentDetails.jrxml");
            Map<String, Object> map=new HashMap<>();
            map.put("DateFrom", fromDate.getDate());
            map.put("DateTo", toDate.getDate());
            map.put("Total", TotalPaidAmountText.getText());
            JasperPrint fillReport=JasperFillManager.fillReport(compileReport, map, DBConnection.getDBConnection().getConnection());
            JasperViewer.viewReport(fillReport, false);
        } catch (JRException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PrintAllDetailsActionPerformed

    private void teacherNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherNameComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherNameComboActionPerformed

    private void printPaidDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printPaidDetailsButtonActionPerformed
        try {
            JasperReport compileReport=JasperCompileManager.compileReport("./src/reports/PaidDetails.jrxml");
            Map<String, Object> map=new HashMap<>();
            map.put("TeacherName", teacherNameCombo.getSelectedItem().toString());
            DefaultTableModel dtm=(DefaultTableModel) teacherPaymentDetails.getModel();
            double TotalPaidAmount=0;
            for (int i = 0; i < dtm.getRowCount(); i++) {
                TotalPaidAmount+=Double.valueOf((double) teacherPaymentDetails.getValueAt(i, 1));
            }
            map.put("TotalPaidAmount", TotalPaidAmount);
            JasperPrint fillReport=JasperFillManager.fillReport(compileReport,map,DBConnection.getDBConnection().getConnection());
            JasperViewer.viewReport(fillReport,false);
            
        } catch (JRException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printPaidDetailsButtonActionPerformed

    private void amountOfPayAtNowTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountOfPayAtNowTextKeyReleased
        String text = amountOfPayAtNowText.getText();
        boolean matches = text.matches("[0-9]{0,5}");
        if (!matches) {
            amountOfPayAtNowText.setText(text.substring(0, text.length() - 1));
        }
    }//GEN-LAST:event_amountOfPayAtNowTextKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeachersSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeachersSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeachersSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeachersSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeachersSalary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PrintAllDetails;
    private javax.swing.JLabel TimeLable;
    private javax.swing.JTextField TotalPaidAmountText;
    private javax.swing.JTextField amountOfPayAtNowText;
    private javax.swing.JTextField balanceText;
    private javax.swing.JLabel dateLable;
    private javax.swing.JTextField dueToPayText;
    private javax.swing.JTextField expectedAmountText;
    private org.jdesktop.swingx.JXDatePicker fromDate;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXImagePanel jXImagePanel1;
    private javax.swing.JMenuItem newStudent;
    private javax.swing.JMenuItem newSubject;
    private javax.swing.JButton okButton;
    private javax.swing.JTable paidDetailstable;
    private javax.swing.JTable payAtNowTable;
    private javax.swing.JButton printPaidDetailsButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPopupMenu studentPopupMenu;
    private javax.swing.JPopupMenu subjectPopupMenu;
    private javax.swing.JComboBox teacherNameCombo;
    private javax.swing.JTable teacherPaymentDetails;
    private org.jdesktop.swingx.JXDatePicker toDate;
    private javax.swing.JMenuItem viewStudent;
    private javax.swing.JMenuItem viewSubject;
    // End of variables declaration//GEN-END:variables

    private void setDateAndTime() {
        Date date = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy/MM/dd");
        String formetedDate = simpleDateFormat.format(date);
        dateLable.setText(formetedDate);

        Thread t1 = new Thread() {

            @Override
            public void run() {
                while (true) {
                    Date date = new Date();
                    SimpleDateFormat simpleTimeFormat = new SimpleDateFormat("hh:mm:ss a");
                    String formatedTime = simpleTimeFormat.format(date);
                    TimeLable.setText(formatedTime);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TeachersSalary.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        };
        t1.start();
    }

    private void setBackgroundColourMouseEnter(JXLabel Label) {
        Label.setBackground(Color.white);
    }

    private void setBackgroundColourMouseExit(JXLabel Label) {
        Label.setBackgroundPainter(null);
    }

    private void showPopupMenu(MouseEvent evt) {
        studentPopupMenu.show(this, evt.getX(), evt.getY());
    }

    private void formMousePressed(MouseEvent evt) {
        if (evt.isPopupTrigger()) {
            showPopupMenu(evt);
        }
    }

    private void formMouseReleased(MouseEvent evt) {
        if (evt.isPopupTrigger()) {
            showPopupMenu(evt);
        }
    }

    private void showTimeTabelPopupMenu(MouseEvent evt) {
        subjectPopupMenu.show(this, evt.getX(), evt.getY());
    }

    private void fillTable(String teacherName) throws ClassNotFoundException, SQLException {
        ArrayList<TeacherPayAtNow> teacher = TeacherController.getDetails(teacherName);
        DefaultTableModel dtm = (DefaultTableModel) payAtNowTable.getModel();
        dtm.setRowCount(0);
        for (TeacherPayAtNow teacherDetails : teacher) {
            Object[] ob = {teacherDetails.getYear(), teacherDetails.getCategory(), teacherDetails.getNoOfStudentClassFeePaid(), teacherDetails.getTotalNumberOfStudent(), teacherDetails.getClassFee(), teacherDetails.getPaymentPrecentage(), teacherDetails.getExpectedAmount(), teacherDetails.getTotalRecivedAmount()};
            dtm.addRow(ob);
        }
        double ExpectedTotalAmount = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            ExpectedTotalAmount += Double.valueOf((double) dtm.getValueAt(i, 6));
        }
        expectedAmountText.setText(Double.toString(ExpectedTotalAmount));
        double TotalRecivedAmount = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            TotalRecivedAmount += Double.valueOf((double) dtm.getValueAt(i, 7));
        }
       /* String dueToPayAmount = TeacherPaymentsController.getDueToPay(teacherNameCombo.getSelectedItem().toString(), TotalRecivedAmount);
        if (dueToPayAmount != null) {
            dueToPayText.setText(dueToPayAmount);
        } else {
            dueToPayText.setText(Double.toString(TotalRecivedAmount));
        }*/
    }

    private void fillTeacherPaymentDetails() throws ClassNotFoundException, SQLException {
        String Name=teacherNameCombo.getSelectedItem().toString();
        ArrayList<TeacherPayments> teacherPayment=TeacherPaymentsController.getDetails(Name);
        DefaultTableModel dtm=(DefaultTableModel) teacherPaymentDetails.getModel();
        dtm.setRowCount(0);
        for (TeacherPayments teacherPayment1 : teacherPayment) {
            Object[] ob={teacherPayment1.getNIC(),teacherPayment1.getPaymentAmount()};
            dtm.addRow(ob);
        }
        double paidAmount=0;
        for(int i=0;i<dtm.getRowCount();i++){
            paidAmount+=Double.valueOf((double) dtm.getValueAt(i, 1));
        }
        DefaultTableModel dtm1=(DefaultTableModel) payAtNowTable.getModel();
        double TotalReceviedAmount=0;
        for (int i = 0; i < dtm1.getRowCount(); i++) {
            TotalReceviedAmount+=Double.valueOf((double) dtm1.getValueAt(i, 7));
        }
        dueToPayText.setText(Double.toString(TotalReceviedAmount-paidAmount));
    }

}
